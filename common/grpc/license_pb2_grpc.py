# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import license_pb2 as license__pb2


class LicenseStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetLicense = channel.unary_unary(
        '/YrcfAgent.License/GetLicense',
        request_serializer=license__pb2.GetLicensePara.SerializeToString,
        response_deserializer=license__pb2.GetLicenseResponse.FromString,
        )
    self.SetLicense = channel.unary_unary(
        '/YrcfAgent.License/SetLicense',
        request_serializer=license__pb2.SetLicensePara.SerializeToString,
        response_deserializer=license__pb2.SetLicenseResponse.FromString,
        )
    self.RequestLicense = channel.unary_unary(
        '/YrcfAgent.License/RequestLicense',
        request_serializer=license__pb2.RequestLicensePara.SerializeToString,
        response_deserializer=license__pb2.RequestLicenseResponse.FromString,
        )


class LicenseServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def GetLicense(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SetLicense(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def RequestLicense(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_LicenseServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetLicense': grpc.unary_unary_rpc_method_handler(
          servicer.GetLicense,
          request_deserializer=license__pb2.GetLicensePara.FromString,
          response_serializer=license__pb2.GetLicenseResponse.SerializeToString,
      ),
      'SetLicense': grpc.unary_unary_rpc_method_handler(
          servicer.SetLicense,
          request_deserializer=license__pb2.SetLicensePara.FromString,
          response_serializer=license__pb2.SetLicenseResponse.SerializeToString,
      ),
      'RequestLicense': grpc.unary_unary_rpc_method_handler(
          servicer.RequestLicense,
          request_deserializer=license__pb2.RequestLicensePara.FromString,
          response_serializer=license__pb2.RequestLicenseResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'YrcfAgent.License', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
