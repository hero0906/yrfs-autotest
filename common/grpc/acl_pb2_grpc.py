# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import acl_pb2 as acl__pb2


class AclStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.AddAcl = channel.unary_unary(
                '/YrcfAgent.Acl/AddAcl',
                request_serializer=acl__pb2.AddAclPara.SerializeToString,
                response_deserializer=acl__pb2.AddAclResponse.FromString,
                )
        self.ListAcl = channel.unary_unary(
                '/YrcfAgent.Acl/ListAcl',
                request_serializer=acl__pb2.ListAclPara.SerializeToString,
                response_deserializer=acl__pb2.ListAclResponse.FromString,
                )
        self.DeleteAcl = channel.unary_unary(
                '/YrcfAgent.Acl/DeleteAcl',
                request_serializer=acl__pb2.DeleteAclPara.SerializeToString,
                response_deserializer=acl__pb2.DeleteAclResponse.FromString,
                )


class AclServicer(object):
    """Missing associated documentation comment in .proto file."""

    def AddAcl(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListAcl(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteAcl(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AclServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'AddAcl': grpc.unary_unary_rpc_method_handler(
                    servicer.AddAcl,
                    request_deserializer=acl__pb2.AddAclPara.FromString,
                    response_serializer=acl__pb2.AddAclResponse.SerializeToString,
            ),
            'ListAcl': grpc.unary_unary_rpc_method_handler(
                    servicer.ListAcl,
                    request_deserializer=acl__pb2.ListAclPara.FromString,
                    response_serializer=acl__pb2.ListAclResponse.SerializeToString,
            ),
            'DeleteAcl': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteAcl,
                    request_deserializer=acl__pb2.DeleteAclPara.FromString,
                    response_serializer=acl__pb2.DeleteAclResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'YrcfAgent.Acl', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Acl(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def AddAcl(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/YrcfAgent.Acl/AddAcl',
            acl__pb2.AddAclPara.SerializeToString,
            acl__pb2.AddAclResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListAcl(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/YrcfAgent.Acl/ListAcl',
            acl__pb2.ListAclPara.SerializeToString,
            acl__pb2.ListAclResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteAcl(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/YrcfAgent.Acl/DeleteAcl',
            acl__pb2.DeleteAclPara.SerializeToString,
            acl__pb2.DeleteAclResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
